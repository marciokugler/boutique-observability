# Source: opentelemetry-demo/templates/component.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loadgenerator
spec:
  selector:
    matchLabels:
      app: loadgenerator
  replicas: 1
  template:
    metadata:
      labels:
        app: loadgenerator
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
      restartPolicy: Always
      containers:
        - name: main
          image: 'loadgenerator'
          imagePullPolicy: IfNotPresent
          ports:
          - containerPort: 8089
            name: service
          env:
          - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
            value: "http://appdynamics-otel-collector-service.appdynamics.svc.cluster.local:4317"
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: "service.name=webstore-loadgenerator,service.version=1.0.0"
          - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
            value: cumulative
          - name: LOCUST_WEB_PORT
            value: "8089"
          - name: LOCUST_USERS
            value: "10"
          - name: LOCUST_SPAWN_RATE
            value: "1"
          - name: LOCUST_HOST
            value: http://frontend-external:80
          - name: LOCUST_HEADLESS
            value: "false"
          - name: LOCUST_AUTOSTART
            value: "true"
          - name: LOCUST_BROWSER_TRAFFIC_ENABLED
            value: "true"
          - name: PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION
            value: python
          resources:
            limits:
              memory: 1Gi
          volumeMounts:
      volumes:
---

---
# Source: opentelemetry-demo/templates/component.yaml
apiVersion: v1
kind: Service
metadata:
  name: loadgenerator
spec:
  type: ClusterIP
  ports:
    - port: 8089
      name: tcp-service
      targetPort: 8089
---